Index: http.h
===================================================================
RCS file: /cvs/src/usr.sbin/httpd/http.h,v
retrieving revision 1.14
diff -u -p -r1.14 http.h
--- http.h	1 Aug 2016 21:15:30 -0000	1.14
+++ http.h	30 Dec 2018 19:45:32 -0000
@@ -243,8 +243,9 @@ struct http_descriptor {
 	char			*http_version;
 	unsigned int		 http_status;
 
-	/* Rewritten path remains NULL if not used */
+	/* Rewritten path and query remain NULL if not used */
 	char			*http_path_alias;
+	char			*http_query_alias;
 
 	/* A tree of headers and attached lists for repeated headers. */
 	struct kv		*http_lastheader;
Index: httpd.conf.5
===================================================================
RCS file: /cvs/src/usr.sbin/httpd/httpd.conf.5,v
retrieving revision 1.101
diff -u -p -r1.101 httpd.conf.5
--- httpd.conf.5	20 Jun 2018 16:43:05 -0000	1.101
+++ httpd.conf.5	30 Dec 2018 19:45:32 -0000
@@ -208,7 +208,9 @@ may contain predefined macros that will 
 .It Ic $DOCUMENT_URI
 The request path.
 .It Ic $QUERY_STRING
-The URL encoded query string of the request.
+The query string of the request.
+.It Ic $QUERY_STRING_ENC
+The URL-encoded query string of the request.
 .It Ic $REMOTE_ADDR
 The IP address of the connected client.
 .It Ic $REMOTE_PORT
Index: server_fcgi.c
===================================================================
RCS file: /cvs/src/usr.sbin/httpd/server_fcgi.c,v
retrieving revision 1.76
diff -u -p -r1.76 server_fcgi.c
--- server_fcgi.c	19 May 2018 13:56:56 -0000	1.76
+++ server_fcgi.c	30 Dec 2018 19:45:32 -0000
@@ -97,7 +97,7 @@ server_fcgi(struct httpd *env, struct cl
 	int				 pathlen;
 	int				 fd = -1, ret;
 	const char			*stripped, *p, *alias, *errstr = NULL;
-	char				*str, *script = NULL;
+	char				*query_alias, *str, *script = NULL;
 
 	if (srv_conf->socket[0] == ':') {
 		struct sockaddr_storage	 ss;
@@ -193,6 +193,10 @@ server_fcgi(struct httpd *env, struct cl
 	    ? desc->http_path_alias
 	    : desc->http_path;
 
+	query_alias = desc->http_query_alias != NULL
+	    ? desc->http_query_alias
+	    : desc->http_query;
+
 	stripped = server_root_strip(alias, srv_conf->strip);
 	if ((pathlen = asprintf(&script, "%s%s", srv_conf->root, stripped))
 	    == -1) {
@@ -241,8 +245,8 @@ server_fcgi(struct httpd *env, struct cl
 		goto fail;
 	}
 
-	if (desc->http_query) {
-		if (fcgi_add_param(&param, "QUERY_STRING", desc->http_query,
+	if (query_alias) {
+		if (fcgi_add_param(&param, "QUERY_STRING", query_alias,
 		    clt) == -1) {
 			errstr = "failed to encode param";
 			goto fail;
Index: server_http.c
===================================================================
RCS file: /cvs/src/usr.sbin/httpd/server_http.c,v
retrieving revision 1.125
diff -u -p -r1.125 server_http.c
--- server_http.c	11 Oct 2018 09:52:22 -0000	1.125
+++ server_http.c	30 Dec 2018 19:45:33 -0000
@@ -104,6 +104,8 @@ server_httpdesc_free(struct http_descrip
 	desc->http_path_alias = NULL;
 	free(desc->http_query);
 	desc->http_query = NULL;
+	free(desc->http_query_alias);
+	desc->http_query_alias = NULL;
 	free(desc->http_version);
 	desc->http_version = NULL;
 	free(desc->http_host);
@@ -1037,7 +1039,7 @@ server_expand_http(struct client *clt, c
 {
 	struct http_descriptor	*desc = clt->clt_descreq;
 	struct server_config	*srv_conf = clt->clt_srv_conf;
-	char			 ibuf[128], *str, *path;
+	char			 ibuf[128], *str, *path, *query;
 	const char		*errstr = NULL, *p;
 	size_t			 size;
 	int			 n, ret;
@@ -1077,6 +1079,18 @@ server_expand_http(struct client *clt, c
 		if (ret != 0)
 			return (NULL);
 	}
+	if (strstr(val, "$QUERY_STRING_ENC") != NULL) {
+		if (desc->http_query == NULL) {
+			ret = expand_string(buf, len, "$QUERY_STRING_ENC", "");
+		} else {
+			if ((query = url_encode(desc->http_query)) == NULL)
+				return (NULL);
+			ret = expand_string(buf, len, "$QUERY_STRING_ENC", query);
+			free(query);
+		}
+		if (ret != 0)
+			return (NULL);
+	}
 	if (strstr(val, "$QUERY_STRING") != NULL) {
 		if (desc->http_query == NULL) {
 			ret = expand_string(buf, len, "$QUERY_STRING", "");
@@ -1309,11 +1323,11 @@ server_response(struct httpd *httpd, str
 		 * be URL encoded - either specified by the user or by using the
 		 * original $QUERY_STRING.
 		 */
-		free(desc->http_query);
-		desc->http_query = NULL;
+		free(desc->http_query_alias);
+		desc->http_query_alias = NULL;
 		if ((query = strchr(path, '?')) != NULL) {
 			*query++ = '\0';
-			if ((desc->http_query = strdup(query)) == NULL)
+			if ((desc->http_query_alias = strdup(query)) == NULL)
 				goto fail;
 		}
 
@@ -1322,15 +1336,15 @@ server_response(struct httpd *httpd, str
 		    path, sizeof(path)) == NULL)
 			goto fail;
 
-		log_debug("%s: rewrote %s -> %s?%s", __func__,
-		    desc->http_path, path, desc->http_query);
+		log_debug("%s: rewrote %s?%s -> %s?%s", __func__,
+		    desc->http_path, desc->http_query, path, query);
 
-		free(desc->http_path);
-		if ((desc->http_path = strdup(path)) == NULL)
+		free(desc->http_path_alias);
+		if ((desc->http_path_alias = strdup(path)) == NULL)
 			goto fail;
 
 		/* Now search for the updated location */
-		srv_conf = server_getlocation(clt, desc->http_path);
+		srv_conf = server_getlocation(clt, desc->http_path_alias);
 	}
 
 	if (srv_conf->flags & SRVFLAG_BLOCK) {
